{
    "schemes": [
        "https",
        "http"
    ],
    "swagger": "2.0",
    "info": {
        "description": "API para gestão de complexo de kitnets com 31 unidades\nSistema completo de gerenciamento de unidades, moradores, contratos e pagamentos",
        "title": "Kitnet Manager API",
        "contact": {
            "name": "Luciano Gabriel",
            "email": "contato@example.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "1.0"
    },
    "basePath": "/api/v1",
    "paths": {
        "/auth/change-password": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Altera a senha do usuário autenticado",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Trocar senha",
                "parameters": [
                    {
                        "description": "Senhas antiga e nova",
                        "name": "passwords",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.ChangePasswordRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "description": "Autentica um usuário e retorna um token JWT",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Login",
                "parameters": [
                    {
                        "description": "Credenciais de login",
                        "name": "credentials",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.LoginResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/me": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retorna os dados do usuário autenticado pelo token",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Obter usuário atual",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.UserResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/refresh": {
            "post": {
                "description": "Gera um novo token JWT a partir de um token válido ou expirado",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Renovar token",
                "parameters": [
                    {
                        "description": "Token a ser renovado",
                        "name": "token",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.RefreshTokenRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.RefreshTokenResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/users": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retorna lista de todos os usuários (apenas admin)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Listar usuários",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/handler.UserResponse"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Cria um novo usuário no sistema (apenas admin)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Criar usuário",
                "parameters": [
                    {
                        "description": "Dados do usuário",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.CreateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/handler.UserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/users/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retorna os dados de um usuário específico (apenas admin)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Buscar usuário por ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID (UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.UserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/users/{id}/activate": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Ativa um usuário previamente desativado (apenas admin)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Ativar usuário",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID (UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/users/{id}/deactivate": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Desativa um usuário (apenas admin)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Desativar usuário",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID (UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/users/{id}/role": {
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Altera o papel/permissão de um usuário (apenas admin)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Alterar role de usuário",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID (UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Novo role",
                        "name": "role",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.ChangeRoleRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/dashboard": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retorna métricas consolidadas de ocupação, financeiras, contratos e alertas",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dashboard"
                ],
                "summary": "Obter dados do dashboard",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.DashboardResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/leases": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retorna lista de contratos com filtros opcionais",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Leases"
                ],
                "summary": "Listar contratos",
                "parameters": [
                    {
                        "enum": [
                            "active",
                            "expiring_soon",
                            "expired",
                            "cancelled"
                        ],
                        "type": "string",
                        "description": "Filter by status",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by unit ID (UUID)",
                        "name": "unit_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by tenant ID (UUID)",
                        "name": "tenant_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/handler.LeaseResponse"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Cria um novo contrato de locação",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Leases"
                ],
                "summary": "Criar novo contrato",
                "parameters": [
                    {
                        "description": "Dados do contrato",
                        "name": "lease",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.CreateLeaseRequestDTO"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/handler.LeaseResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/leases/expiring-soon": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retorna contratos que expiram nos próximos 45 dias",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Leases"
                ],
                "summary": "Listar contratos expirando em breve",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/handler.LeaseResponse"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/leases/stats": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retorna estatísticas agregadas dos contratos",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Leases"
                ],
                "summary": "Estatísticas de contratos",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service.LeaseStats"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/leases/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retorna os dados de um contrato específico",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Leases"
                ],
                "summary": "Buscar contrato por ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Lease ID (UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.LeaseResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/leases/{id}/cancel": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Cancela um contrato e libera a unidade",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Leases"
                ],
                "summary": "Cancelar contrato",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Lease ID (UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/leases/{id}/painting-fee": {
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Registra pagamento da taxa de pintura",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Leases"
                ],
                "summary": "Atualizar taxa de pintura paga",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Lease ID (UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Valor pago",
                        "name": "payment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.UpdatePaintingFeePaidRequestDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/leases/{id}/renew": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Renova um contrato existente criando um novo contrato",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Leases"
                ],
                "summary": "Renovar contrato",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Lease ID (UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Dados da renovação",
                        "name": "renewal",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.RenewLeaseRequestDTO"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/handler.LeaseResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/leases/{lease_id}/payments": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retorna todos os pagamentos de um contrato específico",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Payments"
                ],
                "summary": "Listar pagamentos de um contrato",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Lease ID (UUID)",
                        "name": "lease_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/handler.PaymentResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/leases/{lease_id}/payments/stats": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retorna estatísticas agregadas dos pagamentos de um contrato",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Payments"
                ],
                "summary": "Estatísticas de pagamentos de um contrato",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Lease ID (UUID)",
                        "name": "lease_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.PaymentStatsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/payments/overdue": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retorna todos os pagamentos com status overdue",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Payments"
                ],
                "summary": "Listar pagamentos atrasados",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/handler.PaymentResponse"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/payments/upcoming": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retorna pagamentos que vencem nos próximos X dias (padrão: 7 dias)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Payments"
                ],
                "summary": "Listar pagamentos próximos ao vencimento",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Número de dias à frente (padrão: 7)",
                        "name": "days",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/handler.PaymentResponse"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/payments/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retorna os dados de um pagamento específico",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Payments"
                ],
                "summary": "Buscar pagamento por ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Payment ID (UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.PaymentResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/payments/{id}/cancel": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Cancela um pagamento pendente",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Payments"
                ],
                "summary": "Cancelar pagamento",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Payment ID (UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/payments/{id}/pay": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Registra um pagamento como pago com data e forma de pagamento",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Payments"
                ],
                "summary": "Marcar pagamento como pago",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Payment ID (UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Dados do pagamento",
                        "name": "payment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.MarkPaymentAsPaidRequestDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.PaymentResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/reports/financial": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retorna relatório financeiro consolidado com filtros de período e tipo",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Reports"
                ],
                "summary": "Obter relatório financeiro",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Data inicial (YYYY-MM-DD)",
                        "name": "start_date",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Data final (YYYY-MM-DD)",
                        "name": "end_date",
                        "in": "query",
                        "required": true
                    },
                    {
                        "enum": [
                            "rent",
                            "painting_fee",
                            "adjustment"
                        ],
                        "type": "string",
                        "description": "Tipo de pagamento",
                        "name": "payment_type",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "pending",
                            "paid",
                            "overdue",
                            "cancelled"
                        ],
                        "type": "string",
                        "description": "Status do pagamento",
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service.FinancialReportResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/reports/payments": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retorna histórico detalhado de pagamentos com filtros",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Reports"
                ],
                "summary": "Obter histórico de pagamentos",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filtrar por ID do contrato (UUID)",
                        "name": "lease_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filtrar por ID do morador (UUID)",
                        "name": "tenant_id",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "pending",
                            "paid",
                            "overdue",
                            "cancelled"
                        ],
                        "type": "string",
                        "description": "Filtrar por status",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Data inicial (YYYY-MM-DD)",
                        "name": "start_date",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Data final (YYYY-MM-DD)",
                        "name": "end_date",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service.PaymentHistoryResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/tenants": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retorna lista de moradores com opção de busca por nome",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tenants"
                ],
                "summary": "Listar moradores",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search by name (case-insensitive)",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/handler.TenantResponse"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Cria um novo morador no sistema",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tenants"
                ],
                "summary": "Criar novo morador",
                "parameters": [
                    {
                        "description": "Dados do morador",
                        "name": "tenant",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.CreateTenantRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/handler.TenantResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/tenants/cpf": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retorna os dados de um morador pelo CPF",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tenants"
                ],
                "summary": "Buscar morador por CPF",
                "parameters": [
                    {
                        "type": "string",
                        "description": "CPF (formato: XXX.XXX.XXX-XX)",
                        "name": "cpf",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.TenantResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/tenants/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retorna os dados de um morador específico",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tenants"
                ],
                "summary": "Buscar morador por ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Tenant ID (UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.TenantResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Atualiza os dados de um morador existente",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tenants"
                ],
                "summary": "Atualizar morador",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Tenant ID (UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Dados atualizados",
                        "name": "tenant",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.UpdateTenantRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.TenantResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Remove um morador do sistema",
                "tags": [
                    "Tenants"
                ],
                "summary": "Deletar morador",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Tenant ID (UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/units": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retorna lista de unidades com filtros opcionais",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Units"
                ],
                "summary": "Listar unidades",
                "parameters": [
                    {
                        "enum": [
                            "available",
                            "occupied",
                            "maintenance",
                            "renovation"
                        ],
                        "type": "string",
                        "description": "Filter by status",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Filter by floor",
                        "name": "floor",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/handler.UnitResponse"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Cria uma nova unidade no sistema",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Units"
                ],
                "summary": "Criar nova unidade",
                "parameters": [
                    {
                        "description": "Dados da unidade",
                        "name": "unit",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.CreateUnitRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/handler.UnitResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/units/stats/occupancy": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retorna estatísticas de ocupação das unidades",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Units"
                ],
                "summary": "Estatísticas de ocupação",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service.OccupancyStats"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/units/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retorna os dados de uma unidade específica",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Units"
                ],
                "summary": "Buscar unidade por ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Unit ID (UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.UnitResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Atualiza os dados de uma unidade existente",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Units"
                ],
                "summary": "Atualizar unidade",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Unit ID (UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Dados atualizados",
                        "name": "unit",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.UpdateUnitRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.UnitResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Remove uma unidade do sistema",
                "tags": [
                    "Units"
                ],
                "summary": "Deletar unidade",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Unit ID (UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/units/{id}/status": {
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Atualiza apenas o status de uma unidade",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Units"
                ],
                "summary": "Atualizar status da unidade",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Unit ID (UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Novo status",
                        "name": "status",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.UpdateUnitStatusRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "domain.PaymentMethod": {
            "type": "string",
            "enum": [
                "pix",
                "cash",
                "bank_transfer",
                "credit_card"
            ],
            "x-enum-varnames": [
                "PaymentMethodPix",
                "PaymentMethodCash",
                "PaymentMethodBankTransfer",
                "PaymentMethodCreditCard"
            ]
        },
        "domain.PaymentStatus": {
            "type": "string",
            "enum": [
                "pending",
                "paid",
                "overdue",
                "cancelled"
            ],
            "x-enum-varnames": [
                "PaymentStatusPending",
                "PaymentStatusPaid",
                "PaymentStatusOverdue",
                "PaymentStatusCancelled"
            ]
        },
        "domain.PaymentType": {
            "type": "string",
            "enum": [
                "rent",
                "painting_fee",
                "adjustment"
            ],
            "x-enum-varnames": [
                "PaymentTypeRent",
                "PaymentTypePaintingFee",
                "PaymentTypeAdjustment"
            ]
        },
        "handler.ChangePasswordRequest": {
            "type": "object",
            "required": [
                "new_password",
                "old_password"
            ],
            "properties": {
                "new_password": {
                    "type": "string",
                    "minLength": 6
                },
                "old_password": {
                    "type": "string",
                    "minLength": 6
                }
            }
        },
        "handler.ChangeRoleRequest": {
            "type": "object",
            "required": [
                "role"
            ],
            "properties": {
                "role": {
                    "type": "string",
                    "enum": [
                        "admin",
                        "manager",
                        "viewer"
                    ]
                }
            }
        },
        "handler.CreateLeaseRequestDTO": {
            "type": "object",
            "required": [
                "contract_signed_date",
                "monthly_rent_value",
                "painting_fee_installments",
                "painting_fee_total",
                "payment_due_day",
                "start_date",
                "tenant_id",
                "unit_id"
            ],
            "properties": {
                "contract_signed_date": {
                    "type": "string"
                },
                "monthly_rent_value": {
                    "type": "number"
                },
                "painting_fee_installments": {
                    "type": "integer",
                    "maximum": 4,
                    "minimum": 1
                },
                "painting_fee_total": {
                    "type": "number"
                },
                "payment_due_day": {
                    "type": "integer",
                    "maximum": 31,
                    "minimum": 1
                },
                "start_date": {
                    "type": "string"
                },
                "tenant_id": {
                    "type": "string"
                },
                "unit_id": {
                    "type": "string"
                }
            }
        },
        "handler.CreateTenantRequest": {
            "type": "object",
            "required": [
                "cpf",
                "full_name",
                "phone"
            ],
            "properties": {
                "cpf": {
                    "description": "Formato: XXX.XXX.XXX-XX",
                    "type": "string"
                },
                "email": {
                    "type": "string",
                    "maxLength": 255
                },
                "full_name": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 3
                },
                "id_document_number": {
                    "type": "string",
                    "maxLength": 50
                },
                "id_document_type": {
                    "type": "string",
                    "maxLength": 10
                },
                "phone": {
                    "type": "string",
                    "maxLength": 20,
                    "minLength": 10
                }
            }
        },
        "handler.CreateUnitRequest": {
            "type": "object",
            "required": [
                "base_rent_value",
                "floor",
                "number",
                "renovated_rent_value"
            ],
            "properties": {
                "base_rent_value": {
                    "type": "number"
                },
                "floor": {
                    "type": "integer",
                    "minimum": 1
                },
                "number": {
                    "type": "string",
                    "maxLength": 10,
                    "minLength": 1
                },
                "renovated_rent_value": {
                    "type": "number"
                }
            }
        },
        "handler.CreateUserRequest": {
            "type": "object",
            "required": [
                "password",
                "role",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string",
                    "minLength": 6
                },
                "role": {
                    "type": "string",
                    "enum": [
                        "admin",
                        "manager",
                        "viewer"
                    ]
                },
                "username": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 3
                }
            }
        },
        "handler.DashboardResponse": {
            "type": "object",
            "properties": {
                "alerts": {
                    "$ref": "#/definitions/service.DashboardAlerts"
                },
                "contracts": {
                    "$ref": "#/definitions/service.ContractMetrics"
                },
                "financial": {
                    "$ref": "#/definitions/service.FinancialMetrics"
                },
                "occupancy": {
                    "$ref": "#/definitions/service.OccupancyMetrics"
                }
            }
        },
        "handler.LeaseResponse": {
            "type": "object",
            "properties": {
                "contract_signed_date": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "days_until_expiry": {
                    "type": "integer"
                },
                "end_date": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_expiring_soon": {
                    "type": "boolean"
                },
                "monthly_rent_value": {
                    "type": "number"
                },
                "painting_fee_installments": {
                    "type": "integer"
                },
                "painting_fee_paid": {
                    "type": "number"
                },
                "painting_fee_total": {
                    "type": "number"
                },
                "payment_due_day": {
                    "type": "integer"
                },
                "start_date": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "tenant_id": {
                    "type": "string"
                },
                "unit_id": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "handler.LoginRequest": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string",
                    "minLength": 6
                },
                "username": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 3
                }
            }
        },
        "handler.LoginResponse": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/handler.UserResponse"
                }
            }
        },
        "handler.MarkPaymentAsPaidRequestDTO": {
            "type": "object",
            "required": [
                "payment_date",
                "payment_method"
            ],
            "properties": {
                "payment_date": {
                    "type": "string"
                },
                "payment_method": {
                    "$ref": "#/definitions/domain.PaymentMethod"
                }
            }
        },
        "handler.PaymentResponse": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "created_at": {
                    "type": "string"
                },
                "due_date": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "lease_id": {
                    "type": "string"
                },
                "payment_date": {
                    "type": "string"
                },
                "payment_method": {
                    "type": "string"
                },
                "payment_type": {
                    "type": "string"
                },
                "reference_month": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "handler.PaymentStatsResponse": {
            "type": "object",
            "properties": {
                "overdue_count": {
                    "type": "integer"
                },
                "paid_count": {
                    "type": "integer"
                },
                "pending_count": {
                    "type": "integer"
                },
                "total_paid": {
                    "type": "number"
                },
                "total_payments": {
                    "type": "integer"
                },
                "total_pending": {
                    "type": "number"
                }
            }
        },
        "handler.RefreshTokenRequest": {
            "type": "object",
            "required": [
                "token"
            ],
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "handler.RefreshTokenResponse": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "handler.RenewLeaseRequestDTO": {
            "type": "object",
            "required": [
                "painting_fee_installments",
                "painting_fee_total"
            ],
            "properties": {
                "painting_fee_installments": {
                    "type": "integer",
                    "maximum": 4,
                    "minimum": 1
                },
                "painting_fee_total": {
                    "type": "number"
                }
            }
        },
        "handler.TenantResponse": {
            "type": "object",
            "properties": {
                "cpf": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "full_name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "id_document_number": {
                    "type": "string"
                },
                "id_document_type": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "handler.UnitResponse": {
            "type": "object",
            "properties": {
                "base_rent_value": {
                    "type": "number"
                },
                "created_at": {
                    "type": "string"
                },
                "current_rent_value": {
                    "type": "number"
                },
                "floor": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "is_renovated": {
                    "type": "boolean"
                },
                "notes": {
                    "type": "string"
                },
                "number": {
                    "type": "string"
                },
                "renovated_rent_value": {
                    "type": "number"
                },
                "status": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "handler.UpdatePaintingFeePaidRequestDTO": {
            "type": "object",
            "required": [
                "amount_paid"
            ],
            "properties": {
                "amount_paid": {
                    "type": "number"
                }
            }
        },
        "handler.UpdateTenantRequest": {
            "type": "object",
            "required": [
                "full_name",
                "phone"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "maxLength": 255
                },
                "full_name": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 3
                },
                "id_document_number": {
                    "type": "string",
                    "maxLength": 50
                },
                "id_document_type": {
                    "type": "string",
                    "maxLength": 10
                },
                "phone": {
                    "type": "string",
                    "maxLength": 20,
                    "minLength": 10
                }
            }
        },
        "handler.UpdateUnitRequest": {
            "type": "object",
            "required": [
                "base_rent_value",
                "floor",
                "number",
                "renovated_rent_value"
            ],
            "properties": {
                "base_rent_value": {
                    "type": "number"
                },
                "floor": {
                    "type": "integer",
                    "minimum": 1
                },
                "is_renovated": {
                    "type": "boolean"
                },
                "notes": {
                    "type": "string",
                    "maxLength": 500
                },
                "number": {
                    "type": "string",
                    "maxLength": 10,
                    "minLength": 1
                },
                "renovated_rent_value": {
                    "type": "number"
                }
            }
        },
        "handler.UpdateUnitStatusRequest": {
            "type": "object",
            "required": [
                "status"
            ],
            "properties": {
                "status": {
                    "type": "string",
                    "enum": [
                        "available",
                        "occupied",
                        "maintenance",
                        "renovation"
                    ]
                }
            }
        },
        "handler.UserResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "last_login_at": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "response.ErrorResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "details": {
                    "type": "string"
                },
                "error": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "response.Response": {
            "type": "object",
            "properties": {
                "data": {},
                "error": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "service.Alert": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "entity_id": {
                    "description": "ID do payment, lease ou unit",
                    "type": "string"
                },
                "severity": {
                    "description": "\"high\", \"medium\", \"low\"",
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "type": {
                    "description": "\"overdue_payment\", \"expiring_lease\", \"vacant_unit\"",
                    "type": "string"
                }
            }
        },
        "service.ContractMetrics": {
            "type": "object",
            "properties": {
                "cancelled_contracts": {
                    "type": "integer"
                },
                "contracts_expiring_soon": {
                    "type": "integer"
                },
                "expired_contracts": {
                    "type": "integer"
                },
                "total_active_contracts": {
                    "type": "integer"
                }
            }
        },
        "service.DashboardAlerts": {
            "type": "object",
            "properties": {
                "expiring_leases": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/service.Alert"
                    }
                },
                "overdue_payments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/service.Alert"
                    }
                },
                "total_alerts": {
                    "type": "integer"
                },
                "vacant_units": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/service.Alert"
                    }
                }
            }
        },
        "service.FinancialMetrics": {
            "type": "object",
            "properties": {
                "collection_rate": {
                    "description": "Taxa de cobrança efetiva",
                    "type": "number"
                },
                "default_rate": {
                    "description": "Taxa de inadimplência",
                    "type": "number"
                },
                "monthly_projected_revenue": {
                    "type": "number"
                },
                "monthly_realized_revenue": {
                    "type": "number"
                },
                "overdue_amount": {
                    "type": "number"
                },
                "total_pending_amount": {
                    "type": "number"
                }
            }
        },
        "service.FinancialReportResponse": {
            "type": "object",
            "properties": {
                "by_month": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/service.MonthlyRevenue"
                    }
                },
                "by_type": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/service.TypeRevenue"
                    }
                },
                "by_unit": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/service.UnitRevenue"
                    }
                },
                "generated_at": {
                    "type": "string"
                },
                "period": {
                    "$ref": "#/definitions/service.Period"
                },
                "summary": {
                    "$ref": "#/definitions/service.FinancialSummary"
                },
                "total_payments": {
                    "type": "integer"
                }
            }
        },
        "service.FinancialSummary": {
            "type": "object",
            "properties": {
                "cancelled_amount": {
                    "type": "number"
                },
                "overdue_amount": {
                    "type": "number"
                },
                "paid_amount": {
                    "type": "number"
                },
                "pending_amount": {
                    "type": "number"
                },
                "total_revenue": {
                    "type": "number"
                }
            }
        },
        "service.LeaseStats": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "integer"
                },
                "cancelled": {
                    "type": "integer"
                },
                "expired": {
                    "type": "integer"
                },
                "expiring_soon": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "service.MonthlyRevenue": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "count": {
                    "type": "integer"
                },
                "month": {
                    "description": "Formato: \"2024-03\"",
                    "type": "string"
                },
                "year": {
                    "type": "integer"
                }
            }
        },
        "service.OccupancyMetrics": {
            "type": "object",
            "properties": {
                "availability_rate": {
                    "description": "Percentual",
                    "type": "number"
                },
                "available_units": {
                    "type": "integer"
                },
                "maintenance_units": {
                    "type": "integer"
                },
                "occupancy_rate": {
                    "description": "Percentual",
                    "type": "number"
                },
                "occupied_units": {
                    "type": "integer"
                },
                "renovation_units": {
                    "type": "integer"
                },
                "total_units": {
                    "type": "integer"
                }
            }
        },
        "service.OccupancyStats": {
            "type": "object",
            "properties": {
                "available": {
                    "type": "integer"
                },
                "maintenance": {
                    "type": "integer"
                },
                "occupancy_rate": {
                    "description": "Percentual",
                    "type": "number"
                },
                "occupied": {
                    "type": "integer"
                },
                "renovation": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "service.PaymentHistoryItem": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "created_at": {
                    "type": "string"
                },
                "due_date": {
                    "type": "string"
                },
                "lease_id": {
                    "type": "string"
                },
                "payment_date": {
                    "type": "string"
                },
                "payment_id": {
                    "type": "string"
                },
                "payment_method": {
                    "$ref": "#/definitions/domain.PaymentMethod"
                },
                "payment_type": {
                    "$ref": "#/definitions/domain.PaymentType"
                },
                "status": {
                    "$ref": "#/definitions/domain.PaymentStatus"
                },
                "tenant_name": {
                    "type": "string"
                },
                "unit_number": {
                    "type": "string"
                }
            }
        },
        "service.PaymentHistoryResponse": {
            "type": "object",
            "properties": {
                "generated_at": {
                    "type": "string"
                },
                "payments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/service.PaymentHistoryItem"
                    }
                },
                "total_amount": {
                    "type": "number"
                },
                "total_count": {
                    "type": "integer"
                }
            }
        },
        "service.Period": {
            "type": "object",
            "properties": {
                "days": {
                    "type": "integer"
                },
                "end_date": {
                    "type": "string"
                },
                "start_date": {
                    "type": "string"
                }
            }
        },
        "service.TypeRevenue": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "count": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "service.UnitRevenue": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "count": {
                    "type": "integer"
                },
                "unit_id": {
                    "type": "string"
                },
                "unit_number": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "Type \"Bearer\" followed by a space and JWT token.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    },
    "tags": [
        {
            "description": "Autenticação e gerenciamento de usuários",
            "name": "Auth"
        },
        {
            "description": "Operações relacionadas a unidades/kitnets",
            "name": "Units"
        },
        {
            "description": "Operações relacionadas a moradores/inquilinos",
            "name": "Tenants"
        },
        {
            "description": "Operações relacionadas a contratos de locação",
            "name": "Leases"
        },
        {
            "description": "Operações relacionadas a pagamentos",
            "name": "Payments"
        },
        {
            "description": "Métricas consolidadas e visão executiva",
            "name": "Dashboard"
        },
        {
            "description": "Relatórios financeiros e de pagamentos",
            "name": "Reports"
        },
        {
            "description": "Health check e status do sistema",
            "name": "Health"
        }
    ]
}